name: Build and deploy with Datasette

on:
  push:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Check out this repo
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - uses: actions/cache@v2
      name: Configure pip caching
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install SpatiaLite and libgeos
      run: sudo apt-get install spatialite-bin libsqlite3-mod-spatialite libgeos-dev
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build cryptids.db database
      run: python build_cryptids_database.py
    # Only run the deploy if push was to master
    - name: Set up Cloud Run
      if: github.ref == 'refs/heads/master'
      uses: google-github-actions/setup-gcloud@v0
      with:
        version: '275.0.0'
        service_account_email: ${{ secrets.GCP_SA_EMAIL }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
    - name: Deploy to Cloud Run
      if: github.ref == 'refs/heads/master'
      env:
        SIMON_HASH: ${{ secrets.SIMON_HASH }}
      run: |-
        gcloud config set run/region us-central1
        gcloud config set project datasette-222320
        datasette publish cloudrun cryptids.db \
          --spatialite \
          --metadata=metadata.json \
          --template-dir=templates \
          --service=cryptids \
          --install=datasette-leaflet-geojson \
          --install=datasette-cluster-map \
          --install=datasette-haversine \
          --install=datasette-graphql \
          --install=datasette-auth-passwords \
          --plugin-secret datasette-auth-passwords simon_password_hash "$SIMON_HASH"
